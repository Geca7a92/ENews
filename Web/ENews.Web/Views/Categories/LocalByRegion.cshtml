@model ENews.Web.ViewModels.Categories.RegionArticlesViewModel

@{
    this.ViewData["Title"] = Model.Region;
}

<h1>News from @Model.Region </h1>

@foreach (var article in Model.CategoryArticles)
{
    @await Html.PartialAsync("_ArticlePartial", article)
}

<nav>
    <ul class="pagination justify-content-center">

        @*Previous page*@
        @if (this.Model.CurrentPage == 1)
        {
            <li class="page-item disabled m-1">
                <a class="page-link" href="#">Previous</a>
            </li>
        }

        else
        {
            <li class="page-item m-1">
                <a class="page-link"
                   asp-route="local"
                   asp-route-region="@this.Model.Region"
                   asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
            </li>
        }

        @*First page*@
        @if (this.Model.CurrentPage != 1)
        {
            <li class="page-item m-1">
                <a class="page-link"
                   asp-route="local"
                   asp-route-region="@this.Model.Region"
                   asp-route-page="1">1</a>
            </li>
        }

        @*Pages before current page*@
        @for (int i = this.Model.CurrentPage - 2; i < this.Model.CurrentPage; i++)
        {
            @if (i > 1)
            {
                <li class="page-item m-1">
                    <a class="page-link"
                       asp-route="local"
                       asp-route-region="@this.Model.Region"
                       asp-route-page="@i">@i</a>
                </li>
            }
        }

        @*Current page*@
        @{
            <li class="page-item active m-1">
                <a class="page-link"
                   asp-route="local"
                   asp-route-region="@this.Model.Region"
                   asp-route-page="@this.Model.CurrentPage">@this.Model.CurrentPage</a>
            </li>
        }

        @*Pages after current page*@
        @for (int i = this.Model.CurrentPage + 1; i <= this.Model.CurrentPage + 2; i++)
        {
            @if (i < this.Model.PagesCount)
            {

                <li class="page-item m-1">
                    <a class="page-link"
                       asp-route="local"
                       asp-route-region="@this.Model.Region"
                       asp-route-page="@i">@i</a>
                </li>
            }
        }

        @*Last page*@
        @if (this.Model.CurrentPage != this.Model.PagesCount)
        {
            <li class="page-item m-1">
                <a class="page-link"
                   asp-route="local"
                   asp-route-region="@this.Model.Region"
                   asp-route-page="@(this.Model.PagesCount)">@this.Model.PagesCount</a>
            </li>
        }

        @*Next page*@
        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled m-1">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item m-1">
                <a class="page-link"
                   asp-route="local"
                   asp-route-region="@this.Model.Region"
                   asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>