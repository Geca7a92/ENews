@using ENews.Common
@model ENews.Web.ViewModels.Administration.Users.IndexUsersViewModel

@{
    ViewData["Title"] = "Active";
}
<div class="alert alert-primary" role="alert">
    <div class="text-center">
        @ViewData["Title"] user list
    </div>
</div>
<div class="card">
    <div class="card-header">
        <ul class="nav nav-tabs">
            <li class="nav-item active">
                <a class="nav-link active" href="">Active users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="Administration" asp-controller="Users" asp-action="Banned">Blocked users</a>
            </li>
            <li class=" flex-grow-1"></li>
            <li class="nav-item">
                <form method="get" asp-action="Active">
                    <input type="text" hidden="hidden" name="sortBy" value="@ViewData["currentSortOrder"]">
                    <input type="text" placeholder="Search.." name="search">
                    <button type="submit" class="btn"><i class="fa fa-search"></i></button>
                </form>
            </li>
        </ul>
    </div>
    <table class="table table-responsive-lg">
        <thead class="thead-light">
            <tr>
                <th>
                    <a class="nav-link nav-item" asp-area="Administration" asp-controller="Users" asp-action="Active" asp-route-sortBy="@ViewData[GlobalConstants.EmailSortBtn]" asp-route-search="@ViewData["search"]">
                        @Html.DisplayNameFor(model => model.Users.FirstOrDefault().Email)
                    </a>
                </th>
                <th>
                    <a class="nav-link nav-item" asp-area="Administration" asp-controller="Users" asp-action="Active" asp-route-sortBy="@ViewData[GlobalConstants.UsernameSortBtn]" asp-route-search="@ViewData["search"]">
                        @Html.DisplayNameFor(model => model.Users.FirstOrDefault().UserName)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Users.FirstOrDefault().RolesNames)
                </th>
                <th>
                    <a class="nav-link nav-item" asp-area="Administration" asp-controller="Users" asp-action="Active" asp-route-sortBy="@ViewData[GlobalConstants.CreatedOnSortBtn]" asp-route-search="@ViewData["search"]">
                        @Html.DisplayNameFor(model => model.Users.FirstOrDefault().CreatedOn)
                    </a>
                </th>
                <th>
                    Action
                </th>
                <th>
                    Role Manage
                </th>
            </tr>
        </thead>
        <tbody id="OrderByEmail" style="display: normal">
            @foreach (var item in Model.Users)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        <div class="row">
                            @foreach (var role in item.RolesNames)
                            {
                                <div class="col">
                                    @Html.DisplayFor(modelItem => role)
                                </div>
                            }
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedOn)
                    </td>
                    <td>
                        @if (!item.IsDeleted)
                        {
                            <a asp-action="Ban" asp-route-id="@item.Id">Ban</a>
                        }
                        else
                        {
                            <a asp-action="Unban" asp-route-id="@item.Id">Unban</a>
                        }
                    </td>
                    <td>
                        @if (item.RolesNames.Any(r => r == GlobalConstants.ReporterRoleName))
                        {
                            <a asp-action="RemoveRoleReporter" asp-route-id="@item.Id">Remove role reporter</a>
                        }
                        else
                        {
                            <a asp-action="AddRoleReporter" asp-route-id="@item.Id">Add role reporter</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" asp-area="Administration" asp-controller="Users" asp-action="GetReporters" onclick="ShowReportersTable(); loadReporters();" id="showReporterBtn">Show me Reporters</button>
    <button class="btn btn-primary" onclick="upDateReporters();" id="showReporterBtn">Test</button>
    <button class="btn btn-dark" onclick="HideReporterTable()" id="hideReporterBtn" style="display: none">Hide Reporters</button>
    <h1 id="testJs"></h1>
    <table class="table table-responsive-lg" style="display: none" id="reporterTable">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Active</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="reporterTableBody">
        </tbody>
    </table>
</div>

<partial name="_Paging" />

@section Scripts{
    <script>
        function OrderByEmailClick() {
            if ($("#OrderByEmail").is(":visible")) {
                $("#OrderByEmail").hide();
            }
            else {
                $("#OrderByEmail").show();
            }
        }

        function ShowReportersTable() {
            $("#reporterTable").show();
            $("#hideReporterBtn").show();
            $("#showReporterBtn").hide();
        }
        function HideReporterTable() {
            document.getElementById("reporterTableBody").innerHTML = "";
            $("#reporterTable").hide();
            $("#hideReporterBtn").hide();
            $("#showReporterBtn").show();
        }

        function loadReporters() {

            $(document).ready(function () {
                $.getJSON("/Administration/Users/GetReporters",
                    function (json) {
                        var tr;
                        for (var i = 0; i < json.length; i++) {
                            tr = $('<tr/>');
                            tr.append("<td>" + json[i].userName);
                            tr.append("<td>" + json[i].email);
                            tr.append("<td>" + !json[i].isDeleted);
                            tr.append("<td>" + ('<a>' + "Ban"));
                            $('#reporterTableBody').append(tr);
                        }
                    })
            })

        }

        function upDateReporters() {
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById().innerHTML = "";
                    alert(this.responseText);
                }
            }
            xhr.open("GET", "/Administration/Users/GetReporters", true);
            xhr.send();
        }
    </script>
}